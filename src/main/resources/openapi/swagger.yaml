swagger: "2.0"
info:
  description: "API for managing fishermen"
  version: "1.0.0"
  title: "Fisherman API"
basePath: "/fishermansHelp"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /fishermen:
    post:
      tags:
        - "Fisherman Management"
      summary: "Add new fisherman profile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Fisherman object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/Fisherman"
      responses:
        "201":
          description: "Fisherman created"
        "400":
          description: "Invalid input"
    get:
      tags:
        - "Fisherman Management"
      summary: "Search fisherman profile"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "Name of the fisherman to search for"
          required: false
          type: "string"
      responses:
        "200":
          description: "Search results matching the query"
        "400":
          description: "Invalid input"
  /fishermen/{id}:
    put:
      tags:
        - "Fisherman Management"
      summary: "Edit fisherman profile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the fisherman to edit"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Fisherman object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/Fisherman"
      responses:
        "200":
          description: "Fisherman updated"
        "400":
          description: "Invalid input"
        "404":
          description: "Fisherman not found"
    delete:
      tags:
        - "Fisherman Management"
      summary: "Delete fisherman profile"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the fisherman to delete"
          required: true
          type: "string"
      responses:
        "204":
          description: "Fisherman deleted"
        "404":
          description: "Fisherman not found"
          
  /locations:
    post:
      tags:
        - "Location Management"
      summary: "Add new fishing location"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Location object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        "201":
          description: "Location created"
        "400":
          description: "Invalid input"
    get:
      tags:
        - "Location Management"
      summary: "Search fishing locations"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "query"
          description: "Name of the fishing location to search for"
          required: false
          type: "string"
        - name: "spotType"
          in: "query"
          description: "type of fishing location"
          required: false
          type: "string"
        - name: "latitude"
          in: "query"
          description: "Latitude of the fishing location to search for"
          required: false
          type: "number"
          format: "double"
        - name: "longitude"
          in: "query"
          description: "Longitude of the fishing location to search for"
          required: false
          type: "number"
          format: "double"
      responses:
        "200":
          description: "Search results matching the query"
        "400":
          description: "Invalid input"
  /locations/{id}:
    put:
      tags:
        - "Location Management"
      summary: "Edit fishing location"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the fishing location to edit"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Location object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        "200":
          description: "Location updated"
        "400":
          description: "Invalid input"
        "404":
          description: "Location not found"
    delete:
      tags:
        - "Location Management"
      summary: "Delete fishing location"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the fishing location to delete"
          required: true
          type: "string"
      responses:
        "204":
          description: "Location deleted"
        "404":
          description: "Location not found"   
  /catches:
    get:
      tags:
        - "Catch Management"
      summary: "Get all catches"
      description: "Returns a list of all catches with location information."
      responses:
        200:
          description: "A list of catches with location information"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catch"
        500:
          description: "Internal server error"
    post:
      tags:
        - "Catch Management"
      summary: "Submit a catch"
      description: "Allows a fisherman to submit what they caught"
      parameters:
        - name: "species"
          in: "query"
          description: "The species of the fish caught"
          required: true
          type: "string"
        - name: "length"
          in: "query"
          description: "The length of the fish in inches"
          required: true
          type: "number"
        - name: "weight"
          in: "query"
          description: "The weight of the fish in pounds"
          required: true
          type: "number"
        - name : "quantity"
          in: "query"
          description: "number of fishes caught"
          required: true
          type: "number"
        - name: "locationId"
          in: "query"
          description: "location id of the place"
          required: true
          type: "number"
        - name: "fishSpeciesId"
          in: "query"
          description: "fishSpeciesId"
          required: false
          type: "number"  
      responses:
        200:
          description: "Catch submitted successfully"
        400:
          description: "Invalid input parameters"
        500:
          description: "Internal server error"
  /fishspecies:
    get:
      tags:
        - "Fish Species"
      summary: "Retrieve a list of all fish species"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/FishSpecies'
        500:
          description: "Internal server error"  
    post:
      tags:
        - "Fish Species"
      summary: "Add a new fish species"
      parameters:
        - name: "fishspecies"
          in: "body"
          required: true
          schema:
            $ref: '#/definitions/FishSpecies'
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/FishSpecies'
            
  /fishspecies/{id}:
    get:
      tags:
        - "Fish Species"
      summary: "Retrieve a fish species by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/FishSpecies'
    put:
      tags:
        - "Fish Species"
      summary: "Update a fish species by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Fish object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/FishSpecies"  
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/FishSpecies'
    delete:
      tags:
        - "Fish Species"
      summary: "Delete a fish species by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
      responses:
        204:
          description: "deleted item"  
          schema:
            $ref: '#/definitions/FishSpecies'
definitions:

  Fisherman:
    type: "object"
    required:
      - "id"
      - "name"
      - "password"
      - "age"
      - "email"
      - "phone"
      - "locationId"
    properties:
      id:
        type: "number"
      name:
        type: "string"
      password:
        type: "string"
      age:
        type: "integer"
        format: "int32"
        minimum: 18
        maximum: 99
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
        
  Location:
    type: "object"
    required:
      - "id"
      - "name"
      - "spotType"
      - "latitude"
      - "longitude"
      - "description"
    properties:
      id:
        type: "number"
      name:
        type: "string"
      spotType:
        type: "string"
      latitude:
        type: "number"
        format: "double"
      longitude:
        type: "number"
        format: "double"
      description:
        type: "string"  
        
  Catch:
    type: "object"
    required:
      - "species"
      - "length"
      - "weight"
      - "quantity"
      - "locationId"
      - "fishermanId"
      - "fishSpeciesId"
    properties:
      species:
        type: "string"
      length:
        type: "number"
      weight:
        type: "number"
      quantity:
        type: "number"
      locationId:
        type: "number"
      fishermanId:
        type: "number"
      fishSpeciesId:
        type: "number"
        
  FishSpecies:
    type: "object"
    required:
      - "id"
      - "name"
      - "description"
      - "protected"
    properties:
      id:
        type: "number"
        description: "The unique ID of the fish species"
      name:
        type: "string"
        description: "The common name of the fish species"
      description:
        type: "string"
        description: "A description of the fish species"
      protected:
        type: "boolean"
        description: "true when the fish is protected by the government"